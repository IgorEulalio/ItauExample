[
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2020-08-11T04:33:13.465Z",
        "line": 14,
        "name": "Verificar se o imposto é calculado corretamente pela API",
        "description": "",
        "id": "calculo-do-imposto-de-renda;verificar-se-o-imposto-é-calculado-corretamente-pela-api;;2",
        "type": "scenario",
        "keyword": "Esquema do Cenario",
        "steps": [
          {
            "result": {
              "duration": 2992600,
              "status": "passed"
            },
            "line": 8,
            "name": "que tenho os seguintes bens 100000 , \"C\" , 150000, 9000, 250000",
            "match": {
              "arguments": [
                {
                  "val": "100000",
                  "offset": 28
                },
                {
                  "val": "\"C\"",
                  "offset": 37
                },
                {
                  "val": "150000",
                  "offset": 43
                },
                {
                  "val": "9000",
                  "offset": 51
                },
                {
                  "val": "250000",
                  "offset": 57
                }
              ],
              "location": "br.com.api.steps.CalculoImpostoTest.que_tenho_os_seguintes_bens(java.lang.Double,java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double)"
            },
            "keyword": "Dado "
          },
          {
            "result": {
              "duration": 3031079500,
              "status": "passed"
            },
            "line": 9,
            "name": "submeto os meus bens para cálculo do imposto",
            "match": {
              "location": "br.com.api.steps.CalculoImpostoTest.submetoOsMeusBensParaCálculoDoImposto()"
            },
            "keyword": "Quando "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nJSON path valor_restituido doesn\u0027t match.\nExpected: \u003c11.0F\u003e\n  Actual: 8430.0\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:237)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:492)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:127)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:156)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:260)\r\n\tat io.restassured.specification.ResponseSpecification$body$0.callCurrent(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:156)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:192)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:107)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)\r\n\tat io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)\r\n\tat br.com.api.steps.CalculoImpostoTest.devoObterOValorDeImpostoEquivalenteAoResultadoEsperado(CalculoImpostoTest.java:44)\r\n\tat ✽.devo obter o valor de imposto equivalente a R$ 11.0(file:///C:/Users/Leonardo/workspace/ItauExample/src/test/resource/features/CalculoImpostoRenda.feature:10)\r\n",
              "duration": 638292600,
              "status": "failed"
            },
            "line": 10,
            "name": "devo obter o valor de imposto equivalente a R$ 11.0",
            "match": {
              "arguments": [
                {
                  "val": "11.0",
                  "offset": 47
                }
              ],
              "location": "br.com.api.steps.CalculoImpostoTest.devoObterOValorDeImpostoEquivalenteAoResultadoEsperado(double)"
            },
            "keyword": "Então "
          }
        ]
      },
      {
        "start_timestamp": "2020-08-11T04:33:17.313Z",
        "line": 15,
        "name": "Verificar se o imposto é calculado corretamente pela API",
        "description": "",
        "id": "calculo-do-imposto-de-renda;verificar-se-o-imposto-é-calculado-corretamente-pela-api;;3",
        "type": "scenario",
        "keyword": "Esquema do Cenario",
        "steps": [
          {
            "result": {
              "duration": 997300,
              "status": "passed"
            },
            "line": 8,
            "name": "que tenho os seguintes bens 55500,0 , \"A\" , 3000000, 7000, 450000",
            "match": {
              "arguments": [
                {
                  "val": "55500,0",
                  "offset": 28
                },
                {
                  "val": "\"A\"",
                  "offset": 38
                },
                {
                  "val": "3000000",
                  "offset": 44
                },
                {
                  "val": "7000",
                  "offset": 53
                },
                {
                  "val": "450000",
                  "offset": 59
                }
              ],
              "location": "br.com.api.steps.CalculoImpostoTest.que_tenho_os_seguintes_bens(java.lang.Double,java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double)"
            },
            "keyword": "Dado "
          },
          {
            "result": {
              "duration": 39893600,
              "status": "passed"
            },
            "line": 9,
            "name": "submeto os meus bens para cálculo do imposto",
            "match": {
              "location": "br.com.api.steps.CalculoImpostoTest.submetoOsMeusBensParaCálculoDoImposto()"
            },
            "keyword": "Quando "
          },
          {
            "result": {
              "duration": 25932600,
              "status": "passed"
            },
            "line": 10,
            "name": "devo obter o valor de imposto equivalente a R$ 44690.0",
            "match": {
              "arguments": [
                {
                  "val": "44690.0",
                  "offset": 47
                }
              ],
              "location": "br.com.api.steps.CalculoImpostoTest.devoObterOValorDeImpostoEquivalenteAoResultadoEsperado(double)"
            },
            "keyword": "Então "
          }
        ]
      },
      {
        "start_timestamp": "2020-08-11T04:33:17.398Z",
        "line": 16,
        "name": "Verificar se o imposto é calculado corretamente pela API",
        "description": "",
        "id": "calculo-do-imposto-de-renda;verificar-se-o-imposto-é-calculado-corretamente-pela-api;;4",
        "type": "scenario",
        "keyword": "Esquema do Cenario",
        "steps": [
          {
            "result": {
              "duration": 998000,
              "status": "passed"
            },
            "line": 8,
            "name": "que tenho os seguintes bens 100000 , \"C\" , 10, 9000, 250000",
            "match": {
              "arguments": [
                {
                  "val": "100000",
                  "offset": 28
                },
                {
                  "val": "\"C\"",
                  "offset": 37
                },
                {
                  "val": "10",
                  "offset": 43
                },
                {
                  "val": "9000",
                  "offset": 47
                },
                {
                  "val": "250000",
                  "offset": 53
                }
              ],
              "location": "br.com.api.steps.CalculoImpostoTest.que_tenho_os_seguintes_bens(java.lang.Double,java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double)"
            },
            "keyword": "Dado "
          },
          {
            "result": {
              "duration": 32912500,
              "status": "passed"
            },
            "line": 9,
            "name": "submeto os meus bens para cálculo do imposto",
            "match": {
              "location": "br.com.api.steps.CalculoImpostoTest.submetoOsMeusBensParaCálculoDoImposto()"
            },
            "keyword": "Quando "
          },
          {
            "result": {
              "duration": 30917300,
              "status": "passed"
            },
            "line": 10,
            "name": "devo obter o valor de imposto equivalente a R$ 6180.15",
            "match": {
              "arguments": [
                {
                  "val": "6180.15",
                  "offset": 47
                }
              ],
              "location": "br.com.api.steps.CalculoImpostoTest.devoObterOValorDeImpostoEquivalenteAoResultadoEsperado(double)"
            },
            "keyword": "Então "
          }
        ]
      },
      {
        "start_timestamp": "2020-08-11T04:33:17.477Z",
        "line": 17,
        "name": "Verificar se o imposto é calculado corretamente pela API",
        "description": "",
        "id": "calculo-do-imposto-de-renda;verificar-se-o-imposto-é-calculado-corretamente-pela-api;;5",
        "type": "scenario",
        "keyword": "Esquema do Cenario",
        "steps": [
          {
            "result": {
              "duration": 998900,
              "status": "passed"
            },
            "line": 8,
            "name": "que tenho os seguintes bens 55500,0 , \"A\" , 20, 7000, 450000",
            "match": {
              "arguments": [
                {
                  "val": "55500,0",
                  "offset": 28
                },
                {
                  "val": "\"A\"",
                  "offset": 38
                },
                {
                  "val": "20",
                  "offset": 44
                },
                {
                  "val": "7000",
                  "offset": 48
                },
                {
                  "val": "450000",
                  "offset": 54
                }
              ],
              "location": "br.com.api.steps.CalculoImpostoTest.que_tenho_os_seguintes_bens(java.lang.Double,java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double)"
            },
            "keyword": "Dado "
          },
          {
            "result": {
              "duration": 41886800,
              "status": "passed"
            },
            "line": 9,
            "name": "submeto os meus bens para cálculo do imposto",
            "match": {
              "location": "br.com.api.steps.CalculoImpostoTest.submetoOsMeusBensParaCálculoDoImposto()"
            },
            "keyword": "Quando "
          },
          {
            "result": {
              "duration": 30918400,
              "status": "passed"
            },
            "line": 10,
            "name": "devo obter o valor de imposto equivalente a R$ 14690.2",
            "match": {
              "arguments": [
                {
                  "val": "14690.2",
                  "offset": 47
                }
              ],
              "location": "br.com.api.steps.CalculoImpostoTest.devoObterOValorDeImpostoEquivalenteAoResultadoEsperado(double)"
            },
            "keyword": "Então "
          }
        ]
      },
      {
        "start_timestamp": "2020-08-11T04:33:17.565Z",
        "line": 18,
        "name": "Verificar se o imposto é calculado corretamente pela API",
        "description": "",
        "id": "calculo-do-imposto-de-renda;verificar-se-o-imposto-é-calculado-corretamente-pela-api;;6",
        "type": "scenario",
        "keyword": "Esquema do Cenario",
        "steps": [
          {
            "result": {
              "duration": 997300,
              "status": "passed"
            },
            "line": 8,
            "name": "que tenho os seguintes bens 100000 , \"C\" , 1000, 9000, 250000",
            "match": {
              "arguments": [
                {
                  "val": "100000",
                  "offset": 28
                },
                {
                  "val": "\"C\"",
                  "offset": 37
                },
                {
                  "val": "1000",
                  "offset": 43
                },
                {
                  "val": "9000",
                  "offset": 49
                },
                {
                  "val": "250000",
                  "offset": 55
                }
              ],
              "location": "br.com.api.steps.CalculoImpostoTest.que_tenho_os_seguintes_bens(java.lang.Double,java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double)"
            },
            "keyword": "Dado "
          },
          {
            "result": {
              "duration": 36901900,
              "status": "passed"
            },
            "line": 9,
            "name": "submeto os meus bens para cálculo do imposto",
            "match": {
              "location": "br.com.api.steps.CalculoImpostoTest.submetoOsMeusBensParaCálculoDoImposto()"
            },
            "keyword": "Quando "
          },
          {
            "result": {
              "duration": 20464500,
              "status": "passed"
            },
            "line": 10,
            "name": "devo obter o valor de imposto equivalente a R$ 6195.0",
            "match": {
              "arguments": [
                {
                  "val": "6195.0",
                  "offset": 47
                }
              ],
              "location": "br.com.api.steps.CalculoImpostoTest.devoObterOValorDeImpostoEquivalenteAoResultadoEsperado(double)"
            },
            "keyword": "Então "
          }
        ]
      },
      {
        "start_timestamp": "2020-08-11T04:33:17.631Z",
        "line": 19,
        "name": "Verificar se o imposto é calculado corretamente pela API",
        "description": "",
        "id": "calculo-do-imposto-de-renda;verificar-se-o-imposto-é-calculado-corretamente-pela-api;;7",
        "type": "scenario",
        "keyword": "Esquema do Cenario",
        "steps": [
          {
            "result": {
              "duration": 996900,
              "status": "passed"
            },
            "line": 8,
            "name": "que tenho os seguintes bens 55500,0 , \"A\" , 5000, 7000, 450000",
            "match": {
              "arguments": [
                {
                  "val": "55500,0",
                  "offset": 28
                },
                {
                  "val": "\"A\"",
                  "offset": 38
                },
                {
                  "val": "5000",
                  "offset": 44
                },
                {
                  "val": "7000",
                  "offset": 50
                },
                {
                  "val": "450000",
                  "offset": 56
                }
              ],
              "location": "br.com.api.steps.CalculoImpostoTest.que_tenho_os_seguintes_bens(java.lang.Double,java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double)"
            },
            "keyword": "Dado "
          },
          {
            "result": {
              "duration": 41888200,
              "status": "passed"
            },
            "line": 9,
            "name": "submeto os meus bens para cálculo do imposto",
            "match": {
              "location": "br.com.api.steps.CalculoImpostoTest.submetoOsMeusBensParaCálculoDoImposto()"
            },
            "keyword": "Quando "
          },
          {
            "result": {
              "duration": 19947100,
              "status": "passed"
            },
            "line": 10,
            "name": "devo obter o valor de imposto equivalente a R$ 14740.0",
            "match": {
              "arguments": [
                {
                  "val": "14740.0",
                  "offset": 47
                }
              ],
              "location": "br.com.api.steps.CalculoImpostoTest.devoObterOValorDeImpostoEquivalenteAoResultadoEsperado(double)"
            },
            "keyword": "Então "
          }
        ]
      },
      {
        "start_timestamp": "2020-08-11T04:33:17.701Z",
        "line": 20,
        "name": "Verificar se o imposto é calculado corretamente pela API",
        "description": "",
        "id": "calculo-do-imposto-de-renda;verificar-se-o-imposto-é-calculado-corretamente-pela-api;;8",
        "type": "scenario",
        "keyword": "Esquema do Cenario",
        "steps": [
          {
            "result": {
              "duration": 2006300,
              "status": "passed"
            },
            "line": 8,
            "name": "que tenho os seguintes bens 100000 , \"C\" , 9999, 9000, 250000",
            "match": {
              "arguments": [
                {
                  "val": "100000",
                  "offset": 28
                },
                {
                  "val": "\"C\"",
                  "offset": 37
                },
                {
                  "val": "9999",
                  "offset": 43
                },
                {
                  "val": "9000",
                  "offset": 49
                },
                {
                  "val": "250000",
                  "offset": 55
                }
              ],
              "location": "br.com.api.steps.CalculoImpostoTest.que_tenho_os_seguintes_bens(java.lang.Double,java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double)"
            },
            "keyword": "Dado "
          },
          {
            "result": {
              "duration": 28911900,
              "status": "passed"
            },
            "line": 9,
            "name": "submeto os meus bens para cálculo do imposto",
            "match": {
              "location": "br.com.api.steps.CalculoImpostoTest.submetoOsMeusBensParaCálculoDoImposto()"
            },
            "keyword": "Quando "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nJSON path valor_restituido doesn\u0027t match.\nExpected: \u003c5.0F\u003e\n  Actual: 6329.985\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:492)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:260)\r\n\tat io.restassured.specification.ResponseSpecification$body$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:107)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)\r\n\tat io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)\r\n\tat br.com.api.steps.CalculoImpostoTest.devoObterOValorDeImpostoEquivalenteAoResultadoEsperado(CalculoImpostoTest.java:44)\r\n\tat ✽.devo obter o valor de imposto equivalente a R$ 5(file:///C:/Users/Leonardo/workspace/ItauExample/src/test/resource/features/CalculoImpostoRenda.feature:10)\r\n",
              "duration": 19948100,
              "status": "failed"
            },
            "line": 10,
            "name": "devo obter o valor de imposto equivalente a R$ 5",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 47
                }
              ],
              "location": "br.com.api.steps.CalculoImpostoTest.devoObterOValorDeImpostoEquivalenteAoResultadoEsperado(double)"
            },
            "keyword": "Então "
          }
        ]
      }
    ],
    "name": "Calculo do Imposto de Renda",
    "description": "  Eu como pessoa física\n  Desejo declarar os meus bens\n  Para que eu possa saber qual o valor do imposto que eu tenho a restituir ou a pagar",
    "id": "calculo-do-imposto-de-renda",
    "keyword": "Funcionalidade",
    "uri": "file:src/test/resource/features/CalculoImpostoRenda.feature",
    "tags": []
  }
]